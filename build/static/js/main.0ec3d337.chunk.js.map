{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","layout/layouts.js","layout/colors.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notofication.js","components/ResetButton/ResetButton.js","components/Title/Title.js","helpers/constants.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["SectionWrapper","styled","section","props","flex","vertical","Section","children","defaultProps","styles","redColor","whiteColor","blueColor","darkColor","yellowColor","greenColor","Statistics","good","neutral","bad","total","percent","List","ListItem","listItemStyles","listItemTypes","green","color","yellow","red","blue","white","ul","li","FeedbackOptions","options","onLeaveFeedback","FeedbackWrapper","map","element","FeedbackButton","type","title","onClick","div","button","Notofication","message","NotoficationWrapper","Text","p","ResetButton","onResetButton","ResButton","Title","titleType","titleStyles","TitleH1","TitleH2","titleTypes","accented","normal","h1","h2","GOOD","NEUTRAL","Feedback","useState","setGood","setNeutral","setBad","Math","floor","stateArray","option","state","App","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ec3d337.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst SectionWrapper = styled.section`\n  ${props =>\n    props.flex\n      ? 'display: flex; align-items: center; justify-content: center; flex-direction: row;'\n      : 'display: block;'};\n\n  ${props => (props.vertical ? 'flex-direction: column;' : '')};\n\n  padding: 0 25px;\n  margin: 0;\n`;\n\nconst Section = ({ children, flex, vertical }) => {\n  return (\n    <SectionWrapper flex={flex} vertical={vertical}>\n      {children}\n    </SectionWrapper>\n  );\n};\n\nSection.defaultProps = {\n  flex: false,\n  vertical: false,\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n  vertical: PropTypes.bool,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { getStyles } from '../../layout/layouts';\nconst styles = getStyles();\n\nexport default function Statistics({ good, neutral, bad, total, percent }) {\n  return (\n    <List>\n      <ListItem listItemStyles=\"green\">Good: {good}</ListItem>\n      <ListItem listItemStyles=\"yellow\">Neutral: {neutral}</ListItem>\n      <ListItem listItemStyles=\"red\">Bad: {bad}</ListItem>\n      <ListItem listItemStyles=\"white\">Total: {total}</ListItem>\n      <ListItem listItemStyles=\"blue\">Positive feedback: {percent}%</ListItem>\n    </List>\n  );\n}\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  percent: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number,\n  percent: PropTypes.number,\n};\n\nconst listItemTypes = {\n  green: {\n    color: `${styles.greenColor}`,\n  },\n  yellow: {\n    color: `${styles.yellowColor}`,\n  },\n  red: {\n    color: `${styles.redColor}`,\n  },\n  blue: {\n    color: `${styles.blueColor}`,\n  },\n  white: {\n    color: `${styles.whiteColor}`,\n  },\n};\n\nconst List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst ListItem = styled.li`\n  font-family: 'Roboto', sans-serif;\n  font-size: 20px;\n  font-weight: 600;\n  padding: 2px;\n  color: ${({ listItemStyles }) => listItemTypes[listItemStyles].color};\n`;\n","import * as colors from './colors';\n\nexport function getStyles(params) {\n  return {\n    redColor: colors.redColor,\n    whiteColor: colors.whiteColor,\n    blueColor: colors.blueColor,\n    darkColor: colors.darkColor,\n    yellowColor: colors.yellowColor,\n    greenColor: colors.greenColor,\n  };\n}\n","export const redColor = '#ef2f3c';\nexport const whiteColor = '#f6f4f3';\nexport const blueColor = '#276fbf';\nexport const darkColor = '#183059';\nexport const yellowColor = '#f0a202';\nexport const greenColor = '#27991a';\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <FeedbackWrapper>\n      {options.map(element => (\n        <FeedbackButton\n          key={element}\n          type=\"button\"\n          title={`Leave a ${element} response`}\n          onClick={() => {\n            onLeaveFeedback(element);\n          }}\n        >\n          {element}\n        </FeedbackButton>\n      ))}\n    </FeedbackWrapper>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nconst FeedbackWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px 10px;\n`;\nconst FeedbackButton = styled.button`\n  padding: 10px 20px;\n  font-family: var(--big);\n  font-weight: 700;\n  text-transform: capitalize;\n  color: var(--yellow);\n  border: 1px solid gray;\n  border-radius: 6px;\n  box-shadow: 0.5px 0.5px 0.5px 0.5px gray;\n  transition: all 250ms ease-in;\n  :first-of-type {\n    color: var(--green);\n  }\n  :last-of-type {\n    color: var(--red);\n  }\n  :hover {\n    color: var(--white);\n    background-color: var(--yellow);\n  }\n  :first-of-type:hover {\n    background-color: var(--green);\n  }\n  :last-of-type:hover {\n    background-color: var(--red);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nexport default function Notofication({ message }) {\n  return (\n    <NotoficationWrapper>\n      <Text>{message}</Text>\n    </NotoficationWrapper>\n  );\n}\n\nNotofication.defaultProps = {\n  message: \"It's empty here\",\n};\n\nNotofication.propTypes = {\n  message: PropTypes.string,\n};\n\nconst NotoficationWrapper = styled.div`\n  padding: 5px;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  font-family: 'Roboto', sans-serif;\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nexport default function ResetButton({ onResetButton }) {\n  return (\n    <ResButton title=\"Reset values\" onClick={onResetButton}>\n      Reset\n    </ResButton>\n  );\n}\n\nResetButton.propTypes = {\n  onResetButton: PropTypes.func.isRequired,\n};\n\nconst ResButton = styled.button`\n  padding: 10px 20px;\n  font-family: var(--big);\n  font-weight: 700;\n  text-transform: capitalize;\n  color: var(--dark);\n  background-color: var(--white);\n  border: 1px solid gray;\n  border-radius: 6px;\n  box-shadow: 0.5px 0.5px 0.5px 0.5px gray;\n  transition: all 250ms ease-in;\n  :hover {\n    color: var(--white);\n    background-color: var(--dark);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { getStyles } from '../../layout/layouts';\nconst styles = getStyles();\n\nexport default function Title({ title, titleType, titleStyles }) {\n  return (\n    <Fragment>\n      {titleType === true ? (\n        <TitleH1 titleStyles={titleStyles}>{title}</TitleH1>\n      ) : (\n        <TitleH2 titleStyles={titleStyles}>{title}</TitleH2>\n      )}\n    </Fragment>\n  );\n}\n\nTitle.defaultProps = {\n  title: 'Title',\n  titleType: false,\n  titleStyles: 'normal',\n};\n\nTitle.propTypes = {\n  title: PropTypes.string,\n  titleType: PropTypes.bool,\n  titleStyles: PropTypes.string,\n};\n\nconst titleTypes = {\n  accented: {\n    color: `${styles.yellowColor}`,\n  },\n  normal: {\n    color: `${styles.blueColor}`,\n  },\n};\n\nconst TitleH1 = styled.h1`\n  text-align: center;\n  font-size: 32px;\n  font-family: var(--big);\n  color: ${({ titleStyles }) => titleTypes[titleStyles].color};\n`;\n\nconst TitleH2 = styled.h2`\n  text-align: center;\n  font-size: 28px;\n  font-family: var(--font);\n  color: ${({ titleStyles }) => titleTypes[titleStyles].color};\n`;\n","export const GOOD = 'good';\r\nexport const NEUTRAL = 'neutral';\r\nexport const BAD = 'bad';\r\n","import React, { useState, Fragment } from 'react';\nimport Section from '../Section';\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Notification from '../Notification';\nimport ResetButton from '../ResetButton';\nimport Title from '../Title';\nimport { GOOD, NEUTRAL, BAD } from '../../helpers/constants';\n\nexport default function Feedback() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = function (option) {\n    if (option === GOOD) setGood(state => state + 1);\n    if (option === NEUTRAL) setNeutral(state => state + 1);\n    if (option === BAD) setBad(state => state + 1);\n  };\n\n  const onResetButton = () => {\n    setGood(0);\n    setNeutral(0);\n    setBad(0);\n  };\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const total = countTotalFeedback();\n\n  const countPositiveFeedbackPercentage = () => {\n    return total ? Math.floor((good / total) * 100) : 0;\n  };\n\n  const percent = countPositiveFeedbackPercentage();\n  const stateArray = [GOOD, NEUTRAL, BAD];\n\n  return (\n    <Fragment>\n      <Section flex={false} vertical={false}>\n        <Title title=\"Cafe Expresso\" titleType={true} titleStyles=\"accented\" />\n        <Title\n          title=\"Please leave feedback\"\n          titleType={false}\n          titleStyles=\"normal\"\n        />\n        <FeedbackOptions\n          options={stateArray}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n      <Section flex={true} vertical={true}>\n        <Title title=\"Statistics\" titleType={false} titleStyles=\"accented\" />\n\n        {total ? (\n          <Fragment>\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              percent={percent}\n              listItemStyles=\"green\"\n            />\n            <ResetButton onResetButton={onResetButton} />\n          </Fragment>\n        ) : (\n          <Notification message=\"There is no feedback\" />\n        )}\n      </Section>\n    </Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport Feedback from './components/Feedback';\nexport class App extends Component {\n  render() {\n    return <Feedback />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}